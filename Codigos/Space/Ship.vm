function Ship.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push constant 0
pop this 3
push constant 0
pop this 4
push constant 0
pop this 2
push constant 1
pop static 0
push constant 510
pop static 1
push constant 1
pop static 2
push constant 254
pop static 3
push pointer 0
call Ship.show 1
pop temp 0
push pointer 0
return
function Ship.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Ship.show 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push pointer 0
call Ship.draw 1
pop temp 0
push constant 0
return
function Ship.hide 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Ship.draw 1
pop temp 0
push constant 0
return
function Ship.draw 0
push argument 0
pop pointer 0
push pointer 0
push this 2
call Ship.drawShip 2
pop temp 0
push constant 0
return
function Ship.rotClock 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
push this 2
call Ship.drawShip 2
pop temp 0
push this 2
push constant 1
add
pop this 2
push this 2
push constant 7
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop this 2
label IF_FALSE0
push constant 0
return
function Ship.rotCounterClock 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
push this 2
call Ship.drawShip 2
pop temp 0
push this 2
push constant 1
sub
pop this 2
push this 2
push constant 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 7
pop this 2
label IF_FALSE0
push constant 0
return
function Ship.setAngle 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
push this 2
call Ship.drawShip 2
pop temp 0
push argument 1
pop this 2
push constant 0
return
function Ship.getX 0
push argument 0
pop pointer 0
push this 0
return
function Ship.getY 0
push argument 0
pop pointer 0
push this 1
return
function Ship.getShotX 1
push argument 0
pop pointer 0
push constant 0
pop local 0
push this 2
push constant 0
gt
push this 2
push constant 4
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
pop local 0
label IF_FALSE0
push this 2
push constant 4
gt
push this 2
push constant 8
lt
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
neg
pop local 0
label IF_FALSE1
push local 0
return
function Ship.getShotY 1
push argument 0
pop pointer 0
push constant 0
pop local 0
push this 2
push constant 2
lt
push this 2
push constant 6
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
neg
pop local 0
label IF_FALSE0
push this 2
push constant 2
gt
push this 2
push constant 6
lt
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
pop local 0
label IF_FALSE1
push local 0
return
function Ship.accelerate 0
push argument 0
pop pointer 0
push this 2
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 4
push argument 1
sub
pop this 4
label IF_FALSE0
push this 2
push constant 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 3
push argument 1
add
pop this 3
push this 4
push argument 1
sub
pop this 4
label IF_FALSE1
push this 2
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 3
push argument 1
add
pop this 3
label IF_FALSE2
push this 2
push constant 3
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 3
push argument 1
add
pop this 3
push this 4
push argument 1
add
pop this 4
label IF_FALSE3
push this 2
push constant 4
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 4
push argument 1
add
pop this 4
label IF_FALSE4
push this 2
push constant 5
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push this 3
push argument 1
sub
pop this 3
push this 4
push argument 1
add
pop this 4
label IF_FALSE5
push this 2
push constant 6
eq
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push this 3
push argument 1
sub
pop this 3
label IF_FALSE6
push this 2
push constant 7
eq
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push this 3
push argument 1
sub
pop this 3
push this 4
push argument 1
sub
pop this 4
label IF_FALSE7
push constant 0
return
function Ship.move 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
push this 2
call Ship.drawShip 2
pop temp 0
push this 0
push this 3
add
pop this 0
push this 1
push this 4
add
pop this 1
push this 0
push constant 9
sub
push static 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push static 1
push constant 9
sub
pop this 0
label IF_FALSE0
push this 0
push constant 9
add
push static 1
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push static 0
push constant 9
add
pop this 0
label IF_FALSE1
push this 1
push constant 9
sub
push static 2
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push static 3
push constant 9
sub
pop this 1
label IF_FALSE2
push this 1
push constant 9
add
push static 3
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push static 2
push constant 9
add
pop this 1
label IF_FALSE3
push constant 0
not
call Screen.setColor 1
pop temp 0
push pointer 0
push this 2
call Ship.drawShip 2
pop temp 0
push constant 0
return
function Ship.hit 1
push argument 0
pop pointer 0
push constant 0
pop local 0
push argument 1
push argument 3
add
push this 0
push constant 8
sub
gt
push argument 1
push argument 3
sub
push this 0
push constant 8
add
lt
and
push argument 2
push argument 3
add
push this 1
push constant 8
sub
gt
and
push argument 2
push argument 3
sub
push this 1
push constant 8
add
lt
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 0
label IF_FALSE0
push local 0
return
function Ship.drawShip 5
push argument 0
pop pointer 0
push argument 1
push constant 2
eq
not
push argument 1
push constant 6
eq
not
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
push constant 0
eq
push argument 1
push constant 3
eq
or
push argument 1
push constant 5
eq
or
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
pop local 2
goto IF_END1
label IF_FALSE1
push constant 1
neg
pop local 2
label IF_END1
push constant 16
push local 2
call Math.multiply 2
pop local 0
push this 1
push local 0
push constant 2
call Math.divide 2
sub
pop local 4
label WHILE_EXP0
push local 0
push constant 0
eq
not
not
if-goto WHILE_END0
push local 0
push constant 2
call Math.divide 2
pop local 1
label WHILE_EXP1
push local 1
push constant 0
eq
not
not
if-goto WHILE_END1
push this 0
push local 1
sub
push local 4
push local 0
add
call Screen.drawPixel 2
pop temp 0
push local 1
push local 2
sub
pop local 1
goto WHILE_EXP1
label WHILE_END1
push this 0
push local 4
push local 0
add
call Screen.drawPixel 2
pop temp 0
push local 0
push constant 2
call Math.divide 2
pop local 1
label WHILE_EXP2
push local 1
push constant 0
eq
not
not
if-goto WHILE_END2
push this 0
push local 1
add
push local 4
push local 0
add
call Screen.drawPixel 2
pop temp 0
push local 1
push local 2
sub
pop local 1
goto WHILE_EXP2
label WHILE_END2
push local 0
push local 2
sub
pop local 0
goto WHILE_EXP0
label WHILE_END0
goto IF_END0
label IF_FALSE0
push argument 1
push constant 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 1
neg
pop local 2
goto IF_END2
label IF_FALSE2
push constant 1
pop local 2
label IF_END2
push constant 16
push local 2
call Math.multiply 2
pop local 0
push this 0
push local 0
push constant 2
call Math.divide 2
sub
pop local 3
label WHILE_EXP3
push local 0
push constant 0
eq
not
not
if-goto WHILE_END3
push local 0
push constant 2
call Math.divide 2
pop local 1
label WHILE_EXP4
push local 1
push constant 0
eq
not
not
if-goto WHILE_END4
push local 3
push local 0
add
push this 1
push local 1
add
call Screen.drawPixel 2
pop temp 0
push local 1
push local 2
sub
pop local 1
goto WHILE_EXP4
label WHILE_END4
push local 3
push local 0
add
push this 1
call Screen.drawPixel 2
pop temp 0
push local 0
push constant 2
call Math.divide 2
pop local 1
label WHILE_EXP5
push local 1
push constant 0
eq
not
not
if-goto WHILE_END5
push local 3
push local 0
add
push this 1
push local 1
sub
call Screen.drawPixel 2
pop temp 0
push local 1
push local 2
sub
pop local 1
goto WHILE_EXP5
label WHILE_END5
push local 0
push local 2
sub
pop local 0
goto WHILE_EXP3
label WHILE_END3
label IF_END0
push constant 0
return
